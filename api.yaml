openapi: 3.0.0
info:
  title: User API
  version: 1.0.0
paths:
  /user:
    get:
      summary: Get a user
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RedactedUser"
    post:
      summary: Add a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddUserRequest"
      responses:
        "200":
          description: OK
        "400":
          description: "Bad Request"
        "409":
          description: Conflict
    patch:
      summary: Update a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserRequest"
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
    delete:
      summary: Delete a user
      parameters:
        - name: email
          in: query
          description: User email
          schema:
            type: string
        - name: id
          in: query
          description: User ID
          schema:
            type: string
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
  /users:
    get:
      summary: Get users
      parameters:
        - name: offset
          in: query
          description: Offset
          schema:
            type: integer
            minimum: 0
            maximum: 1000
          required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetUsersResult"
        "400":
          description: Bad Request
  /search:
    get:
      summary: Search users
      parameters:
        - name: value
          in: query
          description: Search value
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RedactedUser"
        "400":
          description: Bad Request
components:
  schemas:
    User:
      type: object
      properties:
        email:
          type: string
        id:
          type: string
        createdAt:
          type: string
        notes:
          type: string
        password:
          type: string
        firstName:
          type: string
        lastName:
          type: string
    RedactedUser:
      type: object
      properties:
        email:
          type: string
        id:
          type: string
        createdAt:
          type: string
        notes:
          type: string
        firstName:
          type: string
        lastName:
          type: string
    GetUsersResult:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: "#/components/schemas/RedactedUser"
        total:
          type: integer
    UpdateUserRequest:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        notes:
          type: string
    AddUserRequest:
      type: object
      properties:
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        notes:
          type: string
        password:
          type: string
